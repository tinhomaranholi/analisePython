import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

#Leitura das bases de dados
cards = pd.read_csv(r'C:\Users\Victor Maranholi\Documents\Desafio Stone/dataset-cards.csv', sep=';')
customers = pd.read_csv(r'C:\Users\Victor Maranholi\Documents\Desafio Stone/dataset-customers.csv', sep=';')
frauds = pd.read_csv(r'C:\Users\Victor Maranholi\Documents\Desafio Stone/dataset-frauds.csv', sep=';')
transactions = pd.read_csv(r'C:\Users\Victor Maranholi\Documents\Desafio Stone/dataset-transactions.csv', sep=';')

def quest1():
    print("Media da idade dos clientes: {:.4f}\n".format(customers['age'].mean()))

def quest2():
    print('media cartões Premium: $${:.2f}\n media familia platinum: $${:.2f}\n media famlia gold: $${:.2f}\n'.format(cards['credit_limit'].loc[cards['card_family'] == 'Premium'].mean(), cards['credit_limit'].loc[cards['card_family'] == 'Platinum'].mean(), cards['credit_limit'].loc[cards['card_family'] == 'Gold'].mean()))
    plt.title('Relação Familia x Limite')
    plt.plot(cards['customer_id'].loc[cards['card_family']=='Platinum'], cards['credit_limit'].loc[cards['card_family'] == 'Platinum'], c='r')
    plt.plot(cards['customer_id'].loc[cards['card_family']=='Premium'], cards['credit_limit'].loc[cards['card_family'] == 'Premium'], c='b')
    plt.plot(cards['customer_id'].loc[cards['card_family']=='Gold'], cards['credit_limit'].loc[cards['card_family'] == 'Gold'], c='y')
    plt.show()

def quest3():
    # identificando os IDs com maiores transações fraudolentas
    print((transactions[transactions['id'].isin(frauds['transaction_id'])].sort_values(by=['value'],ascending=False)).head())

def quest4():
    # análise fraud x transactions
    print((transactions[transactions['id'].isin(frauds['transaction_id'])]).groupby(['segment']).describe())

def quest5():
    print((cards[cards['card_number'].isin(transactions['card_number'])]).groupby(['card_family']).describe()) #apontamentos: média de fraudes por card_family: Premium(207)>Gold(181)>Platinum(112)

def quest6():
    # análise card.customer_id x custumer.id
    fraudCustomer = (customers[customers['id'].isin(cards['customer_id'])])
    print(fraudCustomer.groupby(['segment']).describe())  # conclui-se a ordem de fraudes por seguimento sendo: Diamond(215)>Gold (153) > Platinum (114)
    print(fraudCustomer.groupby(['vintage_group']).describe())  # conclui-se a ordme de fraudes por vintage_group sendo: VG1(215)>VG3(153)>VG2(114)
    print(fraudCustomer['age'].mean())  # média de idade dos fraudolentos é 35.61 anos.

chave = 1
while(chave == 1):
    operacao = int(input('Digite o número da questão (1, 2, 3, 4, 5 ou 6)\n'))
    if(operacao == 1):
        print(quest1())
    elif(operacao == 2):
        print(quest2())
    elif(operacao == 3):
        print(quest3())
    elif (operacao == 4):
        print(quest4())
    elif (operacao == 5):
        print(quest5())
    elif (operacao == 6):
        print(quest6())
    else:
        print('numero inválido, o sistema será encerrado\n')
        chave == -1
    chave = int(input('Deseja continuar? 1(Sim) qqr valor (não)\n'))

